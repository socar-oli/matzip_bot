//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: Member.proto

@kotlin.jvm.JvmSynthetic
public inline fun memberDto(block: MemberDtoKt.Dsl.() -> kotlin.Unit): MemberDto =
  MemberDtoKt.Dsl._create(MemberDto.newBuilder()).apply { block() }._build()
public object MemberDtoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: MemberDto.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: MemberDto.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): MemberDto = _builder.build()

    /**
     * <code>string id = 1;</code>
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>string id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * <code>string nickname = 2;</code>
     */
    public var nickname: kotlin.String
      @JvmName("getNickname")
      get() = _builder.getNickname()
      @JvmName("setNickname")
      set(value) {
        _builder.setNickname(value)
      }
    /**
     * <code>string nickname = 2;</code>
     */
    public fun clearNickname() {
      _builder.clearNickname()
    }

    /**
     * <code>.RestaurantList foodList = 3;</code>
     */
    public var foodList: RestaurantList
      @JvmName("getFoodList")
      get() = _builder.getFoodList()
      @JvmName("setFoodList")
      set(value) {
        _builder.setFoodList(value)
      }
    /**
     * <code>.RestaurantList foodList = 3;</code>
     */
    public fun clearFoodList() {
      _builder.clearFoodList()
    }
    /**
     * <code>.RestaurantList foodList = 3;</code>
     * @return Whether the foodList field is set.
     */
    public fun hasFoodList(): kotlin.Boolean {
      return _builder.hasFoodList()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun MemberDto.copy(block: MemberDtoKt.Dsl.() -> kotlin.Unit): MemberDto =
  MemberDtoKt.Dsl._create(this.toBuilder()).apply { block() }._build()
